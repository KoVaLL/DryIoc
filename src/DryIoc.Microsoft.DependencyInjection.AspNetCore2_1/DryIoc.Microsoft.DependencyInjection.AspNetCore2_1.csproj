<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>netstandard2.0</TargetFrameworks>

        <Product>DryIoc.Microsoft.DependencyInjection.AspNetCore2_1</Product>
        <VersionPrefix>3.0.3</VersionPrefix>
        <VersionSuffix></VersionSuffix>

        <AssemblyName>$(Product)</AssemblyName>
        <AssemblyTitle>$(AssemblyName) $(TargetFramework)</AssemblyTitle>
        
        <PackageId>$(AssemblyName)</PackageId>
        <Title>$(AssemblyName)</Title>
        <Description>DryIoc adapter for Microsoft.Extensions.DependencyInjection</Description>
        <PackageTags>DryIoc;Dependency Injection;DI;IoC;Asp;AspNet;vNext;AspNetCore;NetCore</PackageTags>
        <PackageReleaseNotes>
<![CDATA[
## v3.0.3

- removing conflicting support for ASP .Net Core 2.1 and moving it into the separate package DryIoc.Microsoft.DependencyInjection.AspNetCore2_1

## v3.0.2
 
- added back the direct support for ASP .NET Core 2.1

## v3.0.1

- fixed: #97: Resolving last registration from multiple default services bug  

## v3.0.0

- Strongly-named!
- Greatly improved performance and decreased memory allocations for bootstapping and first-time resolution

- fixed: #56 Project Upgrade to core2.2 and then get an error
- added: DryIocAdapter.Create
- added: DryIoc IResolver now directly implements IServiceProvider - no need for BuildServiceProvider anymore
- added: DryIoc.Rules.Rules.MicrosoftDependencyInjectionRules - the set of rules for MS.DI available directly in DryIoc
]]>
        </PackageReleaseNotes>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\DryIoc\DryIoc.csproj" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="[2.1.1, 2.2.0)" />
    </ItemGroup>

</Project>
